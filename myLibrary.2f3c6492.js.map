{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,S,aAEA,MAAMC,EAAO,CACTC,KAAOC,SAASC,cAAc,iBAC9BC,QAAUF,SAASC,cAAc,YACjCE,eAAiBH,SAASC,cAAc,uBACxCG,SAAWJ,SAASC,cAAc,kBAItC,IACII,EADAC,EAAW,GAGf,MAAMC,GAAc,EAAAX,EAAAY,QAAOZ,EAAAa,MAAQ,GA6CnC,SAASC,EAAYC,GACnB,MAAMC,EAAiB,IAAID,GACN,GAAlBC,EAAeC,OAAS,EAGzB,OAFAC,EAAaF,QACbd,EAAKI,QAAQa,UAAUC,IAAI,mBAEzB,MAAMC,EAAWL,EAAeM,MAAM,EAAG,GACpBN,EAARO,OAAO,EAAE,GACKd,EAAZ,IAAIO,GACrBE,EAAaG,GACbnB,EAAKI,QAAQa,UAAUK,OAAO,mBAC9BtB,EAAKI,QAAQmB,iBAAiB,QAASC,E,CAG3C,SAASA,IACL,GAAGjB,EAAeQ,OAAS,EAGvB,OAFAC,EAAaT,QACbP,EAAKI,QAAQa,UAAUC,IAAI,mBAG3BF,EADmBT,EAAea,MAAM,EAAG,IAE3Cb,EAAec,OAAO,EAAE,E,CAgChC,SAASL,EAAaS,GAClB,MAAMC,EAAuBD,EA5BFE,KAAI,EAACC,GAACA,EAAEC,OAAEA,EAAMC,YAAEA,EAAWC,aAAEA,EAAYC,MAAEA,EAAKC,aAAEA,MAC/E,MAAM,0CAA0CL,oFAEOE,4BACpCE,wMAKsBA,sDACAH,EAAO,GAAGK,QAqBtCC,EArBsDJ,GAsBnEI,EAAOA,EAAKC,MAAM,MACN,4IApB6D,GAAfH,8gBAkB9D,IAAiBE,CAPC,IAAGE,KAAK,KAKtBrC,EAAKC,KAAKqC,mBAAmB,YAAaZ,E,CAlG9Cd,EAAYH,GAGRA,GAAgBA,EAAYM,QAa5BN,EAAYkB,KAAIY,GAAIA,EAAGV,SAAQF,KAAIa,GAAIA,EAAGb,KAAIY,GAAI/B,EAASiC,KAAKF,EAAGL,UAChD1B,EAARA,EAASkC,QAAO,CAACH,EAAGI,EAAEC,IAAMD,IAAIC,EAAIC,QAAQN,KACzC/B,EAKVmB,KAAIY,IACJ,MAAMO,EAAS,iCAAiCP,aAChDvC,EAAKM,SAASgC,mBAAmB,YAAYQ,EAAO,IANxD9C,EAAKM,SAASiB,iBAAiB,UAUnC,SAAwBwB,GACpB/C,EAAKC,KAAK+C,UAAY,IACtB,MAAMC,EAAcF,EAAEG,OAAOC,MAC7B,GAAmB,eAAhBF,EAED,YADArC,EAAYH,GAOfG,EAHwBH,EAAYiC,QAAOU,GAC9BA,EAAGvB,OAAOwB,MAAKd,GAAIA,EAAGL,KAAKoB,SAASL,O,KAlChDjD,EAAKK,eAAe2C,UAAY,+f","sources":["src/js/library-render.js"],"sourcesContent":["import { loadLs, KEY } from \"./modal\";\nimport { KEY } from \"./modal\";\nconst refs = {\n    ulEl : document.querySelector(\".trends__list\"),\n    btnLoad : document.querySelector(\".js-load\"),\n    myLibContainer : document.querySelector('.js-mylib-container'),\n    searchEl : document.querySelector('#genre-search'),\n}\n\n\nlet genreArr = [];\nlet forCheckRender;\n\nconst filmsFromLs = loadLs(KEY) || [];\n\nlengthCheck(filmsFromLs);\n                              // проверяем и догружаем все фильмы\n\nif(!filmsFromLs || !filmsFromLs.length) {               // перевірка локал сторіджа\n    refs.myLibContainer.innerHTML = `<div class=\"not-found-film-library\">\n    <p class=\"not-found-film-library-text-item\">OOPS...</p>\n    <p class=\"not-found-film-library-text-item\">We are very sorry!</p>\n    <p class=\"not-found-film-library-text-item\">\n      You don’t have any movies at your library.\n    </p>\n    \n    <a class=\"not-found-film-link\" href=\"./catalog.html\"> Search movie </a>\n  </div>\n  <ul class=\"trends__list visually-hidden\"></ul>\n  <button type=\"button\" class=\"load-more js-load visually-hidden\">Load more</button>`\n} else {\n    filmsFromLs.map(el=>el.genres).map(el=>el.map(el=>genreArr.push(el.name)));     // рендер жанрів в селект\n    genreArr = genreArr.filter((el,i,arr)=>i===arr.indexOf(el));\n    renderOptions(genreArr);\n    refs.searchEl.addEventListener('change', onChangeSelect);\n}\n\nfunction renderOptions(arr) {\n    arr.map(el=>{\n        const option = `<option class='mylib-options'>${el}</option>`;\n        refs.searchEl.insertAdjacentHTML('beforeend',option)\n    });\n}\n\nfunction onChangeSelect(e) {\n    refs.ulEl.innerHTML = \" \"\n    const genreToFind = e.target.value;\n    if(genreToFind === 'All Genres'){\n      lengthCheck(filmsFromLs);\n      return\n    }                            // перед ретурном запхати функцію рендера(ретурн залишити!!!!!!!!!!!!!)\n     \n    const filterredFilms = filmsFromLs.filter(el=>{\n        return (el.genres.some(el=>el.name.includes(genreToFind)))\n    })\n   lengthCheck(filterredFilms)              // замінити ретурн на функцію рендера\n}\n\nfunction lengthCheck(obj) {\n  const filmsInCheckFu = [...obj];                     // переменная для проверок\n  if(filmsInCheckFu.length < 9){                       // если фильмов < 9 просто выводим\n    renderMarkup(filmsInCheckFu);\n    refs.btnLoad.classList.add(\"visually-hidden\");\n    return\n    } const toRender = filmsInCheckFu.slice(0, 9);      // если больше выводим первые 9\n    filmsInCheckFu.splice(0,9);                         // берем все фильмы с 9-го удяляя первые 8\n    forCheckRender = [...filmsInCheckFu];              \n    renderMarkup(toRender);\n    refs.btnLoad.classList.remove(\"visually-hidden\");\n    refs.btnLoad.addEventListener(\"click\", onLoadMore);\n}\n\nfunction onLoadMore() {                                  // проверяем и отображаем по нажатию кнопки \n    if(forCheckRender.length < 9){\n        renderMarkup(forCheckRender);\n        refs.btnLoad.classList.add(\"visually-hidden\");\n        return\n        } const toRender = forCheckRender.slice(0, 9);\n        renderMarkup(toRender);\n        forCheckRender.splice(0,9);\n\n}\nfunction renderLibrary(libraryObj) {\n\nconst markupArray = libraryObj.map(({id, genres, poster_path, release_date, title, vote_average}) => {\n    return`<li class=\"library-list trends-box\" id=${id}>\n              <img\n                src=\"https://image.tmdb.org/t/p/original/${poster_path}\"\n                alt=\"${title}\"\n                class=\"trends__photo\"\n              />\n              <div class=\"trends__description\">\n                <div class=\"trends__info\">\n                  <h3 class=\"trends__name\">${title}</h3>\n                  <p class=\"trends__ganre\">${genres[0].name}|${getYear(release_date)}</p>\n                </div>\n                <div class=\"raiting__body\">\n                  <div class=\"rating__active\" style=\"width: ${(vote_average)*10}px\">\n                    <div class=\"rating__active__wrapper\">\n                      <span class=\"rating__active__color\">★</span>\n                      <span class=\"rating__active__color\">★</span>\n                      <span class=\"rating__active__color\">★</span>\n                      <span class=\"rating__active__color\">★</span>\n                      <span class=\"rating__active__color\">★</span>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </li>`}).join(\" \")\n        return markupArray;\n      }\nfunction renderMarkup(array) {\n    const markup = renderLibrary(array);\n    refs.ulEl.insertAdjacentHTML(\"beforeend\", markup);\n  }\nfunction getYear(date) {\n    date = date.split(\"-\");\n    return date[0];\n  }\n"],"names":["$bTcpz","parcelRequire","$652f0e6c9547df91$var$refs","ulEl","document","querySelector","btnLoad","myLibContainer","searchEl","$652f0e6c9547df91$var$forCheckRender","$652f0e6c9547df91$var$genreArr","$652f0e6c9547df91$var$filmsFromLs","loadLs","KEY","$652f0e6c9547df91$var$lengthCheck","obj","filmsInCheckFu","length","$652f0e6c9547df91$var$renderMarkup","classList","add","toRender","slice","splice","remove","addEventListener","$652f0e6c9547df91$var$onLoadMore","array","markup","map","id","genres","poster_path","release_date","title","vote_average","name","date","split","join","insertAdjacentHTML","el","el1","push","filter","i","arr","indexOf","option","e","innerHTML","genreToFind","target","value","el2","some","includes"],"version":3,"file":"myLibrary.2f3c6492.js.map"}