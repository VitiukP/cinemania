{"mappings":"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","sources":["src/js/catalog.js","src/js/container.js"],"sourcesContent":["import './footer.js';\nimport './header.js';\nimport './error.js';\nimport './hero.js';\nimport './modal.js';\nimport './container.js';\nimport './go-top-btn.js';","import axios from \"axios\";\n\nconst keyAuthorization = \"Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI1ZTBiMjA0M2E3YmRlZmRmMTI5ZGViYjc4NGJiZTFmNyIsInN1YiI6IjY0ZDA5ZWY5ODUwOTBmMDBjODdkY2FjYiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.AoWYcFyuoQyP_ePohi3LRcw4Fp8RAJIbZs-uo4526oA\"\nconst BASE_URL = \"https://api.themoviedb.org/3/\";\nconst searchButton = document.querySelector('.external-button');\nconst searchInput = document.getElementById('searchInput');\nconst trendingContainer = document.getElementById('trendingContainer');\nconst paginationNumBtn = document.querySelector('.pagination-num-btn');\nconst prevPageBtn = document.getElementById('prevPage');\nconst nextPageBtn = document.getElementById('nextPage');\nconst clearButton = document.getElementById('clearButton');\nlet currentPage = 1;\nlet totalPages = 1;\n\nprevPageBtn.addEventListener('click', () => onPageClick(currentPage - 1));\nnextPageBtn.addEventListener('click', () => onPageClick(currentPage + 1));\ndocument.getElementById('sortByYear').addEventListener('change', handleSort);\ndocument.getElementById('sortByGenre').addEventListener('change', handleSort);\n\nsearchButton.addEventListener('click', handleSearch);\nsearchInput.addEventListener('keydown', (event) => {\n    if (event.key === 'Enter') {\n        event.preventDefault();\n        handleSearch(event);\n    }\n});\n\nasync function createMarkup(array) {\n  const markupArray = await Promise.all(array.map(async ({\n    id,\n    genre_ids,\n    poster_path,\n    release_date,\n    title,\n    vote_average,\n  }) => {\n    \n    const genreName = await cardGenres(genre_ids);\n    const year = getYear(release_date);\n\n    return `<li class=\"trends__item trends-box\" id=${id}>\n        <img\n          src=\"https://image.tmdb.org/t/p/original/${poster_path}\"\n          alt=\"${title}\"\n          class=\"trends__photo\"\n          loading=\"lazy\"\n        />\n        <div class=\"trends__description\">\n          <div class=\"trends__info\">\n            <h3 class=\"trends__name\">${title}</h3>\n            <p class=\"trends__ganre\">${genreName}|${year}</p>\n          </div>\n          <div class=\"raiting__body\">\n            <div class=\"rating__active\" style=\"width: ${(vote_average)*10}px\">\n              <div class=\"rating__active__wrapper\">\n                <span class=\"rating__active__color\">★</span>\n                <span class=\"rating__active__color\">★</span>\n                <span class=\"rating__active__color\">★</span>\n                <span class=\"rating__active__color\">★</span>\n                <span class=\"rating__active__color\">★</span>\n              </div>\n            </div>\n          </div>\n        </div>\n      </li>`;\n  }));\n\n  return markupArray.join('');\n}\n\nasync function loadGenre() {\n\n  const response = await axios.get(`${BASE_URL}genre/movie/list`,{\n    headers: {\n      accept: 'application/json',\n          Authorization: keyAuthorization\n    },\n    params: {\n      language: 'en'\n    }\n  })\n  \n  const data = response.data;\n  const genres = data.genres\n  return genres;\n}\nasync function cardGenres(genres) {\n  const defaultGen = \"Nice film\"\n  if(genres.length === 0){\n    return defaultGen;\n  }\n  try {\n    const genresApi =  await loadGenre()\n    const newArr = genresApi.filter((elem=> elem.id === genres[0])).map(el=>el.name).join(\" \")\n    \n    return newArr;\n  } catch (error) {\n    console.log(error.code);\n  }\n  \n}\nfunction getYear(date) {\n  date = date.split(\"-\");\n  return date[0];\n}\n\nasync function populateTrendingMovies(page) {\n    \n    try {\n        const response = await axios.get(`${BASE_URL}trending/movie/day`, {\n            headers: {\n                accept: 'application/json',\n          Authorization: keyAuthorization\n            },\n            params: {\n                language: 'en',\n                page: page\n            }\n        });\n\n        const movies = response.data.results;\n        const markup = await createMarkup(movies);\n\n        const trendingContainer = document.getElementById('trendingContainer');\n        trendingContainer.innerHTML = markup;\n\n        totalPages = response.data.total_pages; // Update total pages\n        updatePaginationButtons(currentPage, totalPages);\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nasync function handleSearch(event) {\n    event.preventDefault();\n\n    const searchInput = document.getElementById('searchInput');\n    const searchQuery = searchInput.value.trim();\n\n    if (searchQuery === '') {\n        return;\n    }\n\n    try {\n        const response = await axios.get(`${BASE_URL}search/movie`, {\n            headers: {\n                accept: 'application/json',\n          Authorization: keyAuthorization\n            },\n            params: {\n                language: 'en',\n                query: searchQuery,\n                page: 1 // Start with page 1\n            }\n        });\n\n        const searchResults = response.data.results;\n        if (searchResults.length === 0) {\n            const markup = `\n            <div class=\"no-results\">\n              <p class=\"text-no-results\">OOPS...</p>\n              <p class=\"text-no-results\">We are very sorry!</p>\n              <p class=\"text-no-results\">\n                We don’t have any results matching your search.\n              </p>\n            </div>`\n            trendingContainer.innerHTML = markup\n          return\n        }\n        const markup = await createMarkup(searchResults);\n        \n        trendingContainer.innerHTML = `<div class=\"results\">${markup}</div>`;\n\n        totalPages = response.data.total_pages; // Update total pages\n        updatePaginationButtons(currentPage, totalPages);\n    } catch (error) {\n        console.log(error.code);\n    }\n}\n\n  searchInput.addEventListener('input', function() {\n            if (searchInput.value.trim() !== '') {\n                clearButton.style.display = 'inline';\n            } else {\n                clearButton.style.display = 'none';\n            }\n        });\n\n        // Add an event listener to the clear button\n        clearButton.addEventListener('click', function() {\n            searchInput.value = '';\n            clearButton.style.display = 'none';\n        });\n// Function to fetch and populate sort options for years and genres\nasync function populateSortOptions() {\n    try {\n        const genres = await loadGenre();\n        const sortByYear = document.getElementById('sortByYear');\n        const sortByGenre = document.getElementById('sortByGenre');\n\n        // Populate sort by year options\n        const currentYear = new Date().getFullYear();\n\n        // Add default option for year\n        const defaultYearOption = document.createElement('option');\n        defaultYearOption.value = '';\n        defaultYearOption.textContent = 'Year';\n        sortByYear.appendChild(defaultYearOption);\n\n        for (let year = currentYear; year >= 1900; year--) {\n            const option = document.createElement('option');\n            option.value = year;\n            option.textContent = year;\n            sortByYear.appendChild(option);\n        }\n\n        // Populate sort by genre options\n        const defaultGenreOption = document.createElement('option');\n        defaultGenreOption.value = '';\n        defaultGenreOption.textContent = 'All';\n        sortByGenre.appendChild(defaultGenreOption);\n\n        for (const genre of genres) {\n            const option = document.createElement('option');\n            option.value = genre.id;\n            option.textContent = genre.name;\n            sortByGenre.appendChild(option);\n        }\n    } catch (error) {\n        console.log(error.code);\n    }\n}\n// Function to handle sorting by year and genre\nasync function handleSort(page) { // Accept page as an argument\n    const sortByYear = document.getElementById('sortByYear');\n    const sortByGenre = document.getElementById('sortByGenre');\n\n    const selectedYear = sortByYear.value;\n    const selectedGenre = sortByGenre.value;\n\n    try {\n        const response = await axios.get(`${BASE_URL}discover/movie`, {\n            headers: {\n                accept: 'application/json',\n                Authorization: keyAuthorization\n            },\n            params: {\n                language: 'en',\n                sort_by: 'popularity.desc',\n                with_genres: selectedGenre,\n                primary_release_year: selectedYear,\n                page: page // Use the passed page argument\n            }\n        });\n\n        const sortedResults = response.data.results;\n        const markup = await createMarkup(sortedResults);\n\n        trendingContainer.innerHTML = markup;\n\n        totalPages = response.data.total_pages; // Update total pages\n        updatePaginationButtons(currentPage, totalPages);\n    } catch (error) {\n        console.log(error.code);\n    }\n}\n\n\n\n// Initialize the page\nasync function initializePage() {\n    await populateSortOptions();\n    onPageClick(currentPage); // Call onPageClick to load trending movies based on default behavior\n}\n\ninitializePage(); // Call this function to initialize the page\n // Call this function to initialize the page\n\nfunction onPageClick(pageNumber) {\n    if (pageNumber < 1 || pageNumber > totalPages) {\n        return;\n    }\n\n    currentPage = pageNumber;\n\n    const sortByYear = document.getElementById('sortByYear');\n    const sortByGenre = document.getElementById('sortByGenre');\n\n    if ((sortByYear.value || sortByGenre.value) && sortByYear.value !== '' && sortByGenre.value !== '') {\n        handleSort(currentPage); // Pass the currentPage to handleSort\n    } else if (searchInput.value.trim() !== '') {\n        handleSearch(); // If searching is active, call handleSearch\n    } else {\n        populateTrendingMovies(currentPage); // Load trending movies if neither sorting nor searching\n    }\n\n    window.scrollTo({ top: trendingContainer.offsetTop, behavior: 'smooth' });\n}\n\n\nfunction updatePaginationButtons(currentPage, totalPages) {\n    paginationNumBtn.innerHTML = ''; // Clear existing buttons\n\n    // Back arrow\n    if (currentPage > 1) {\n        addPageButton(paginationNumBtn, currentPage - 1, 'back');\n    }\n    \n    // Current page\n    addPageButton(paginationNumBtn, currentPage, 'current');\n    \n    // Next page after current page\n    if (currentPage < totalPages) {\n        addPageButton(paginationNumBtn, currentPage + 1, 'next');\n    }\n    \n    // After next page\n    if (currentPage < totalPages - 1) {\n        addPageButton(paginationNumBtn, currentPage + 2);\n    }\n    \n    // Three dots\n    if (currentPage < totalPages - 2) {\n        const morePagesBtn = document.createElement('button');\n        morePagesBtn.classList.add('pagination-btn');\n        morePagesBtn.textContent = '...';\n        paginationNumBtn.appendChild(morePagesBtn);\n    }\n    \n    // 24 page\n    addPageButton(paginationNumBtn, currentPage + 23);\n}\n\nfunction addPageButton(parentElement, pageNum, btnType = '') {\n    const pageBtn = document.createElement('button');\n    pageBtn.classList.add('pagination-cycle-btn');\n    pageBtn.textContent = pageNum < 10 ? `0${pageNum}` : `${pageNum}`;\n    \n    if (btnType === 'current') {\n        pageBtn.classList.add('current-page-btn');\n    }\n\n    pageBtn.addEventListener('click', () => onPageClick(pageNum));\n    parentElement.appendChild(pageBtn);\n}\n\n"],"names":["parcelRequire","$bpxeT","$bc2e17c72ef9c01c$var$keyAuthorization","$bc2e17c72ef9c01c$var$BASE_URL","$bc2e17c72ef9c01c$var$searchButton","document","querySelector","$bc2e17c72ef9c01c$var$searchInput","getElementById","$bc2e17c72ef9c01c$var$trendingContainer","$bc2e17c72ef9c01c$var$paginationNumBtn","$bc2e17c72ef9c01c$var$prevPageBtn","$bc2e17c72ef9c01c$var$nextPageBtn","$bc2e17c72ef9c01c$var$clearButton","$bc2e17c72ef9c01c$var$currentPage","$bc2e17c72ef9c01c$var$totalPages","$bc2e17c72ef9c01c$var$createMarkup","array","$bc2e17c72ef9c01c$var$_createMarkup","apply","this","arguments","$parcel$interopDefault","$2TvXO","mark","_callee1","markupArray","Promise","all","map","_callee","param","id","genre_ids","poster_path","release_date","title","vote_average","genreName","year","$bc2e17c72ef9c01c$var$cardGenres","_ctx","sent","$bc2e17c72ef9c01c$var$getYear","concat","_ctx1","join","$bc2e17c72ef9c01c$var$loadGenre","$bc2e17c72ef9c01c$var$_loadGenre","response","data","genres","$dIxxU","default","get","headers","accept","Authorization","params","language","$bc2e17c72ef9c01c$var$_cardGenres","genresApi","newArr","length","filter","elem","el","name","console","log","t0","code","date","split","$bc2e17c72ef9c01c$var$_populateTrendingMovies","page","movies","markup","results","innerHTML","total_pages","$bc2e17c72ef9c01c$var$updatePaginationButtons","$bc2e17c72ef9c01c$var$handleSearch","event","$bc2e17c72ef9c01c$var$_handleSearch","searchInput1","searchQuery","searchResults","markup1","preventDefault","value","trim","query","$bc2e17c72ef9c01c$var$populateSortOptions","$bc2e17c72ef9c01c$var$_populateSortOptions","sortByYear","sortByGenre","currentYear","defaultYearOption","option","defaultGenreOption","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_iterator","_step","genre","option1","Date","getFullYear","createElement","textContent","appendChild","undefined","Symbol","iterator","next","done","return","t1","$bc2e17c72ef9c01c$var$handleSort","$bc2e17c72ef9c01c$var$_handleSort","selectedYear","selectedGenre","sortedResults","sort_by","with_genres","primary_release_year","$bc2e17c72ef9c01c$var$_initializePage","$bc2e17c72ef9c01c$var$onPageClick","pageNumber","$bc2e17c72ef9c01c$var$populateTrendingMovies","window","scrollTo","top","offsetTop","behavior","currentPage1","totalPages1","$bc2e17c72ef9c01c$var$addPageButton","morePagesBtn","classList","add","parentElement","pageNum","btnType","pageBtn","addEventListener","key","style","display","$bc2e17c72ef9c01c$var$initializePage"],"version":3,"file":"catalog.1c7acd45.js.map"}