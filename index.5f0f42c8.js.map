{"mappings":"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","sources":["src/js/index.js","src/js/tmbd-api.js","src/js/upcoming-this-mounth.js","src/js/weekly-trends.js"],"sourcesContent":["import './error.js';\nimport './footer.js';\nimport './header.js';\nimport './hero.js';\nimport './upcoming-this-mounth.js';\nimport './weekly-trends.js';\nimport './modal.js';\nimport './go-top-btn.js';","import axios from \"axios\";\nimport { upcomingSectionMarkup } from \"./upcoming-this-mounth\";\n\nexport class TMDBApi{\n        #BASE_URL = 'https://api.themoviedb.org/3/';\n        #API_KEY = '5e0b2043a7bdefdf129debb784bbe1f7';\n        constructor() {\n            this.page = 1;\n        }; \n/*\nшлях до картинки\nsrc=\"https://image.tmdb.org/t/p/original/${backdrop_path})\"\n*/\n        async getFilmByName(q) {\n            const params = new URLSearchParams({\n                api_key: this.#API_KEY,\n                query: q,\n                page: this.page,\n            });\n            const response = await axios.get(`${this.#BASE_URL}search/movie?${params}`);\n            if(!response.data.results.length) throw new Error(\"OOPS...We are very sorry!We don’t have any results matching your search.\")\n            return response.data\n        };\n\n        // getFilmByName return {page: 1, results: Array(20), total_pages: 2, total_results: 31}\n\n        async getFilmById(id) {\n        const response  = await axios.get(`${this.#BASE_URL}movie/${id}?api_key=${this.#API_KEY}`);\n        return response.data\n        }\n\n        async getUpcomingFilm() {\n            const randomize = Math.floor(Math.random()*19); \n            const response = await axios.get(`${this.#BASE_URL}movie/upcoming?api_key=${this.#API_KEY}`);\n            const randomFilm = await this.getFilmById(response.data.results[randomize].id);\n            upcomingSectionMarkup(randomFilm)\n        }\n}","import { TMDBApi } from \"./tmbd-api\";\nimport { KEY, loadLs, saveLs } from \"./modal\";\n\nconst upcomingSection = document.querySelector('.js-upcoming-container');\nlet btnLS;\nlet filmId;\nlet toLs = [];\n\nexport function upcomingSectionMarkup(randomFilm) {\n    const genres = randomFilm.genres.reduce((acc,el)=>{\n        acc += `${el.name} `;\n        return acc\n    },'').split(' ').filter(el=>el);\n    genres.length = 2;\n    const genre = genres.join(', ')\n    const markup = `<img class=\"upcoming__image\"\n             src=\"https://image.tmdb.org/t/p/original/${randomFilm.backdrop_path}\" alt=\"${randomFilm.original_title}\" \n             loading=\"lazy\"/>\n             <div class=\"desktop__info__wrapper\">\n            <div class=\"upcoming__info-wrapper\">\n                <h3 class=\"upcoming__film__title\">${randomFilm.original_title}</h3>\n                <ul class=\"upcoming__list__rating\">\n                    <li>\n                    <ul class=\"upcoming__item__rating\">\n                        <li>Release date</li>\n                        <li>Vote &#47; Votes</li>\n                        <li>Popularity</li>\n                        <li>Genre</li>\n                    </ul>\n                </li>\n                <li>\n                    <ul class=\"upcoming__item__rating\">\n                        <li class=\"upcoming__item_customize\">${randomFilm.release_date}</li>\n                        <li class=\"upcoming__item_customize\"><span>${randomFilm.vote_average.toFixed(1)}</span> &#47; <span>${randomFilm.vote_count}</span></li>\n                        <li class=\"upcoming__item_customize\">${randomFilm.popularity}</li>\n                        <li class=\"upcoming__item_customize\">${genre}</li>\n                    </ul>\n                </li>\n                </ul>\n                <ul class=\"upcoming__list__tablet\">\n                    <li class=\"upcoming__tablet__item\">\n                        <p class=\"tablet__subtitle\">Release date</p>\n                        <p class=\"tablet__info\">${randomFilm.release_date}</p>\n                    </li>\n                    <li class=\"upcoming__tablet__item\">\n                        <p class=\"tablet__subtitle\">Popularity</p>\n                        <p class=\"tablet__info upcoming__item_customize\">${randomFilm.popularity.toFixed(1)}</p>\n                    </li>\n                    <li class=\"upcoming__tablet__item\">\n                        <p class=\"tablet__subtitle\">Vote &#47; Votes</p>\n                        <p class=\"tablet__info upcoming__item_customize\"><span>${randomFilm.vote_average.toFixed(1)}</span> &#47; <span>${randomFilm.vote_count}</span></p>\n                    </li>\n                    <li class=\"upcoming__tablet__item\">\n                        <p class=\"tablet__subtitle\">Genre</p>\n                        <p class=\"tablet__info upcoming__item_customize\">${genres}</p>\n                    </li>\n                </ul>\n            </div>\n            <div class=\"upcoming-about-wrapper\">\n                    <p class=\"upcoming__about__title\">About</p>\n                    <p>${randomFilm.overview}</p>\n                </div>\n            <button class=\"upcoming__btn\" type=\"button\">Add to my library</button>\n            </div>`;\n            upcomingSection.innerHTML = markup;\n            filmId = randomFilm.id;\n            btnLS = document.querySelector('.upcoming__btn');\n            try {\n                const arr = loadLs(KEY);\n                // if(arr) toLs = [...arr];\n                if(toLs.some(el=>el.id === filmId)) btnLS.textContent = \"Remove from my library\";\n                btnLS.addEventListener('click', ()=> {\n                    try {\n                        const arr = loadLs(KEY);\n                        if(arr) toLs = [...arr]\n                        if(!toLs.some(el=>el.id=== (+filmId))) {\n                            toLs.push(randomFilm);\n                            saveLs(KEY, toLs);\n                            btnLS.textContent = \"Remove from my library\"\n                            return\n                        }\n                        const ind =  toLs.findIndex(el => el.id ===Number(filmId)) //удаляю с LS\n                        toLs.splice(ind, 1);\n                        localStorage.removeItem(KEY);\n                        saveLs(KEY, toLs)                                     //добавляю в LS\n                        btnLS.textContent = \"Add to my library\"\n                    } catch (error) {\n                        console.error(\"Set state error: \", error.message);\n                    }\n                })\n            }\n            catch (error) {\n                console.log(error.code)\n        }\n}\n\nconst searchFilm = new TMDBApi;\n\nsearchFilm.getUpcomingFilm()","import axios from 'axios';\n\nconst selectEl = document.querySelector('.trends__list')\nconst BASE_URL = 'https://api.themoviedb.org/3/'\n\n// async function getTrends() {\n//  const response = await axios.get(`${BASE_URL}trending/movie/week`,{\n//     headers: {\n//       accept: 'application/json',\n//       Authorization:\n//         'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI1ZTBiMjA0M2E3YmRlZmRmMTI5ZGViYjc4NGJiZTFmNyIsInN1YiI6IjY0ZDA5ZWY5ODUwOTBmMDBjODdkY2FjYiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.AoWYcFyuoQyP_ePohi3LRcw4Fp8RAJIbZs-uo4526oA',\n//     },\n//     params: { \n//       language: 'en-US' \n//     },\n//   })\n//   const data = response.data\n//   const results = data.results\n//   console.log(results);\n//   return results;\n// }\n\nconst options = {\n  method: 'GET',\n  url: 'https://api.themoviedb.org/3/trending/movie/week',\n  params: { language: 'en-US' },\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI1ZTBiMjA0M2E3YmRlZmRmMTI5ZGViYjc4NGJiZTFmNyIsInN1YiI6IjY0ZDA5ZWY5ODUwOTBmMDBjODdkY2FjYiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.AoWYcFyuoQyP_ePohi3LRcw4Fp8RAJIbZs-uo4526oA',\n  },\n};\n\naxios\n  .request(options)\n  .then(function (response) {\n    // console.log(response.data.results);\n    renderMarkup(response.data.results);\n    \n  })\n  .catch(function (error) {\n    // console.error(error);\n  });\n\n\nasync function createMarkup(array) {\n  const markupArray = await Promise.all(array.map(async ({\n    id,\n    genre_ids,\n    poster_path,\n    release_date,\n    title,\n    vote_average,\n  }) => {\n    \n    const genreName = await cardGenres(genre_ids);\n    const year = getYear(release_date);\n\n    return `<li class=\"trends__item\" id=${id}>\n        <img\n          src=\"https://image.tmdb.org/t/p/original/${poster_path}\"\n          alt=\"${title}\"\n          class=\"trends__photo\"\n        loading=\"lazy\"/>\n        <div class=\"trends__description\">\n          <div class=\"trends__info\">\n            <h3 class=\"trends__name\">${title}</h3>\n            <p class=\"trends__ganre\">${genreName}|${year}</p>\n          </div>\n          <div class=\"raiting__body\">\n            <div class=\"rating__active\" style=\"width: ${(vote_average)*10}px\">\n              <div class=\"rating__active__wrapper\">\n                <span class=\"rating__active__color\">★</span>\n                <span class=\"rating__active__color\">★</span>\n                <span class=\"rating__active__color\">★</span>\n                <span class=\"rating__active__color\">★</span>\n                <span class=\"rating__active__color\">★</span>\n              </div>\n            </div>\n          </div>\n        </div>\n      </li>`;\n  }));\n\n  return markupArray.join('');\n}\nasync function renderMarkup(array) {\n  const markup = await createMarkup(array);\n  selectEl.innerHTML = markup;\n}\n// !======================\nasync function loadGenre() {\n\n  const response = await axios.get(`${BASE_URL}genre/movie/list`,{\n    headers: {\n      accept: 'application/json',\n      Authorization: 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI1ZTBiMjA0M2E3YmRlZmRmMTI5ZGViYjc4NGJiZTFmNyIsInN1YiI6IjY0ZDA5ZWY5ODUwOTBmMDBjODdkY2FjYiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.AoWYcFyuoQyP_ePohi3LRcw4Fp8RAJIbZs-uo4526oA'\n    },\n    params: {\n      language: 'en'\n    }\n  })\n  \n  const data = response.data;\n  const genres = data.genres\n  return genres;\n}\nasync function cardGenres(genres) {\n  const defaultGen = \"Nice film\"\n  if(genres.length === 0){\n    return defaultGen;\n  }\n  try {\n    const genresApi =  await loadGenre()\n    const newArr = genresApi.filter((elem=> elem.id === genres[0])).map(el=>el.name).join(\" \")\n    \n    return newArr;\n  } catch (error) {\n    console.log(error.code);\n  }\n  \n}\nfunction getYear(date) {\n  date = date.split(\"-\");\n  return date[0];\n}\n\n\n\n\n"],"names":["parcelRequire","$2shzp","$8ad78a0f8772ceff$var$upcomingSection","document","querySelector","$8ad78a0f8772ceff$var$btnLS","$8ad78a0f8772ceff$var$filmId","$8ad78a0f8772ceff$var$toLs","$8ad78a0f8772ceff$export$1037361b93d48a1a","randomFilm","genres","reduce","acc","el","name","split","filter","length","genre","join","markup","backdrop_path","original_title","release_date","vote_average","toFixed","vote_count","popularity","overview","innerHTML","id","$bTcpz","loadLs","KEY","some","textContent","addEventListener","arr","push","saveLs","ind","findIndex","Number","splice","localStorage","removeItem","error","console","message","log","code","BASE_URL","API_KEY","constructor","this","page","async","q","params","URLSearchParams","api_key","query","response","default","get","data","results","Error","randomize","Math","floor","random","getFilmById","getUpcomingFilm","$d395fb91404b7f70$var$selectEl","request","method","url","language","headers","accept","Authorization","then","array","Promise","all","map","genre_ids","poster_path","title","defaultGen","genresApi","$d395fb91404b7f70$var$loadGenre","elem","$d395fb91404b7f70$var$cardGenres","$d395fb91404b7f70$var$createMarkup","$d395fb91404b7f70$var$renderMarkup","catch"],"version":3,"file":"index.5f0f42c8.js.map"}